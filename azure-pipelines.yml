
name: $(Build.SourceBranch)$(rev:.r)
trigger:
  - releases/*

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: Build
    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          #Get build number: sourceBranch.rev
          $v = ($env:BUILD_BUILDNUMBER)
          #Replace these things...
          $v = $v.replace('refs_', '')
          $v = $v.replace('heads_', '')
          $v = $v.replace('releases_','')
          #not in X.X.X pattern, add 0.0.0 in front
          echo $v
          if($v -notmatch '^\d+\.\d+.\d+$'){
            $v = '0.0.0-' + $v
          }
          echo "##vso[task.setvariable variable=version;isOutput=true]$v"
          echo 'version has been set ' $v
      name: 'SetVersionStep'
      displayName: 'Setting version'

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          (Get-Content ./package.json) | ForEach-Object { $_ -replace "0.0.0", "$(SetVersionStep.version)" } | Set-Content ./package.json
      displayName: 'Changing package.json version'

    - task: Npm@1
      inputs:
        command: 'install'

    - script: tsc
      displayName: 'Running tsc'
  
    - task: Npm@1
      inputs:
        command: 'custom'
        customCommand: 'pack'
    
    - task: PublishPipelineArtifact@1
      inputs:
       artifact: 'tarball'
       targetPath: 'guimabdo-webtyped-angular-$(SetVersionStep.version).tgz'

- stage: Deploy
  dependsOn: Build
  variables:
    packageVersion: $[ dependencies.Build.outputs['SetVersionStep.version'] ]
  displayName: Deploy stage
  jobs:
  - deployment: Deploy
    environment: npm
    strategy:
     runOnce:
       deploy:
         steps:
           - task: DownloadPipelineArtifact@2
             inputs:
              artifactName: 'tarball'

           - task: Npm@1
             inputs:
               command: 'custom'
               customCommand: 'publish guimabdo-webtyped-angular-$(packageVersion).tgz --access public'
             
             

      
    
        